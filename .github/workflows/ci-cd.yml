name: 🚀 Koutonou CI/CD Pipeline

on:
  push:
    branches: [ main, production_ready, develop ]
  pull_request:
    branches: [ main, production_ready ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.0'
  JAVA_VERSION: '17'

jobs:
  # ===============================================
  # 🔍 Code Quality & Analysis
  # ===============================================
  analyze:
    name: 📊 Code Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          
      - name: 📦 Get Dependencies
        run: flutter pub get
        
      - name: 🔍 Verify Formatting
        run: dart format --output=none --set-exit-if-changed lib/ test/ tools/
        
      - name: 📊 Analyze Code
        run: flutter analyze
        
      - name: 🔒 Security Analysis
        run: |
          dart pub global activate pana
          dart pub global run pana --no-warning

  # ===============================================
  # 🧪 Test Suite
  # ===============================================
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: analyze
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          
      - name: 📦 Get Dependencies
        run: flutter pub get
        
      - name: 🧪 Run Unit Tests
        run: flutter test --coverage --reporter json > test-results.json
        
      - name: 📊 Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          name: koutonou-coverage
          fail_ci_if_error: false
          
      - name: 📋 Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: 🧪 Flutter Tests
          path: test-results.json
          reporter: flutter-json

  # ===============================================
  # 🏗️ Build Android
  # ===============================================
  build-android:
    name: 🤖 Build Android
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [analyze, test]
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          
      - name: 📦 Get Dependencies
        run: flutter pub get
        
      - name: 🏗️ Build Android APK
        run: flutter build apk --release --target-platform android-arm64
        
      - name: 🏗️ Build Android App Bundle
        run: flutter build appbundle --release --target-platform android-arm64
        
      - name: 📤 Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30
          
      - name: 📤 Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 30

  # ===============================================
  # 🍎 Build iOS (macOS runner)
  # ===============================================
  build-ios:
    name: 🍎 Build iOS
    runs-on: macos-latest
    timeout-minutes: 45
    needs: [analyze, test]
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          
      - name: 📦 Get Dependencies
        run: flutter pub get
        
      - name: 🍎 Setup iOS
        run: |
          cd ios
          pod install
          cd ..
          
      - name: 🏗️ Build iOS (No Codesign)
        run: flutter build ios --release --no-codesign
        
      - name: 📤 Upload iOS Build
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos/Runner.app
          retention-days: 30

  # ===============================================
  # 🌐 Build Web
  # ===============================================
  build-web:
    name: 🌐 Build Web
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [analyze, test]
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          
      - name: 📦 Get Dependencies
        run: flutter pub get
        
      - name: 🌐 Build Web
        run: flutter build web --release --web-renderer canvaskit
        
      - name: 📤 Upload Web Build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/
          retention-days: 30
          
      - name: 🚀 Deploy to GitHub Pages (main branch only)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web
          cname: koutonou.app # Remplacez par votre domaine

  # ===============================================
  # 📊 Performance & Bundle Analysis
  # ===============================================
  performance-analysis:
    name: 📊 Performance Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build-android
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📥 Download APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: ./artifacts
          
      - name: 📊 APK Analysis
        run: |
          ls -la ./artifacts/
          APK_SIZE=$(du -h ./artifacts/app-release.apk | cut -f1)
          echo "🤖 Android APK Size: $APK_SIZE" >> $GITHUB_STEP_SUMMARY
          
      - name: 📊 Bundle Analysis (if web built)
        if: needs.build-web.result == 'success'
        run: |
          echo "📊 Bundle analysis placeholder - integrate with bundle analyzer tools"

  # ===============================================
  # 🚀 Release & Deploy (Production only)
  # ===============================================
  release:
    name: 🚀 Release & Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build-android, build-ios, build-web, performance-analysis]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 📥 Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release-artifacts
          
      - name: 📋 Create Release Notes
        id: release-notes
        run: |
          echo "📱 **Koutonou Release - $(date +'%Y-%m-%d %H:%M')**" > release-notes.md
          echo "" >> release-notes.md
          echo "🤖 **Android**: APK & AAB disponibles" >> release-notes.md
          echo "🍎 **iOS**: Build disponible (signature requise)" >> release-notes.md
          echo "🌐 **Web**: Déployé sur GitHub Pages" >> release-notes.md
          echo "" >> release-notes.md
          echo "🔗 **Liens**:" >> release-notes.md
          echo "- [📱 Télécharger APK](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> release-notes.md
          echo "- [🌐 Version Web](https://koutonou.app)" >> release-notes.md
          
      - name: 🏷️ Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body_path: release-notes.md
          files: |
            ./release-artifacts/android-apk/app-release.apk
            ./release-artifacts/android-aab/app-release.aab
          draft: false
          prerelease: false

  # ===============================================
  # 📧 Notification Success
  # ===============================================
  notify-success:
    name: 📧 Notify Success
    runs-on: ubuntu-latest
    needs: [analyze, test, build-android, build-ios, build-web]
    if: always() && (needs.analyze.result == 'success' && needs.test.result == 'success')
    
    steps:
      - name: 🎉 Success Notification
        run: |
          echo "✅ **Pipeline Success**" >> $GITHUB_STEP_SUMMARY
          echo "🔍 Analysis: ✅" >> $GITHUB_STEP_SUMMARY
          echo "🧪 Tests: ✅" >> $GITHUB_STEP_SUMMARY
          echo "🤖 Android: ${{ needs.build-android.result == 'success' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
          echo "🍎 iOS: ${{ needs.build-ios.result == 'success' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
          echo "🌐 Web: ${{ needs.build-web.result == 'success' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY

  # ===============================================
  # ❌ Notification Failure
  # ===============================================
  notify-failure:
    name: ❌ Notify Failure
    runs-on: ubuntu-latest
    needs: [analyze, test, build-android, build-ios, build-web]
    if: always() && (needs.analyze.result == 'failure' || needs.test.result == 'failure')
    
    steps:
      - name: ❌ Failure Notification
        run: |
          echo "❌ **Pipeline Failed**" >> $GITHUB_STEP_SUMMARY
          echo "🔍 Analysis: ${{ needs.analyze.result }}" >> $GITHUB_STEP_SUMMARY
          echo "🧪 Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔧 **Actions requises**:" >> $GITHUB_STEP_SUMMARY
          echo "- Vérifier les erreurs d'analyse" >> $GITHUB_STEP_SUMMARY
          echo "- Corriger les tests en échec" >> $GITHUB_STEP_SUMMARY
          echo "- Relancer le pipeline" >> $GITHUB_STEP_SUMMARY
